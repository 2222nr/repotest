> 선형자료구조

1. 배열 Array  
 동일 타입으로 연결되어 나열, 생성 후 길이 조정 불가(중간 삽입/삭제 불가)

2. 연결리스트 LinkedList 
 자료가 추가될 때마다 메모리를 할당, 자료는 링크로 연결
 배열의 단점을 보완. 삽입/삭제가 용이
 Node

 - 단일 연결리스트
 - 이중 연결리스트

3. 스택 Stack  : 후입선출(Last In First Out), 가장 나중에 입력된 자료가 가장 먼저 출력되는 자료 구조
 - 사용처 : 바둑/체스/장기(무르기), 실행 취소, 연산 등

4. 큐 Queue : 선입선출(First In First Out)
 - 사용처 : 콜센터 상담 대기, 은행 대기 번호표

> 비선형자료구조

1. 이진 트리 binary tree : 부모 노드에 자식 노드가 두 개 이하인 트리
 - 자료의 중복 허용하지 않음
 - 왼쪽 자식 노드는 부모 노드보다 작은 값, 오른쪽 자식 노드는 큰 값
 - 자료 검색에 걸리는 시간이 평균 log(n)
 - inorder traversal 탐색 > 자료가 정렬되어 출력
 왼쪽 > 부모 > 오른쪽 (트리의 좌우가 바뀌면 역순)

2. 힙 (heap)

3. 그래프(Graph)  

4. 해싱(Hashing) : 자료를 검색하기 위한 자료구조
 - key는 유일하고 이에 대한 value를 쌍으로 저장
 - index = h(key)
 - 해시 함수에 의해 인덱스 연산이 산술적으로 가능
 - 저장되는 메모리 구조 : 해시테이블
 - 동일한 값이 들어오면 충돌(Collision), 충돌 난 값의 집합은 동의어(Synonym)


> 정렬 알고리즘
1. 버블 정렬(Bubble sort)
 - 인접한 두 요소간의 대소 비교 진행
 - 정렬 알고리즘 중 가장 단순, 비효율적

2. 삽입 정렬(Instertion sort)
 - 

3. 선택 정렬(Seletion sort)
